Osvaldo Luiz Oliveira, Ana Maria Monteiro, and Norton Trevisan Roman. 2011. From concrete to abstract?: problem domain in the learning of introductory programming. In Proceedings of the 16th annual joint conference on Innovation and technology in computer science education (ITiCSE '11). ACM, New York, NY, USA, 173-177. DOI=10.1145/1999747.1999797 http://doi.acm.org/10.1145/1999747.1999797
    Concrete vs. Abstract explanations of problems is way less important than prior knowledge. Wherever possible, build on what students know. We can draw a connection to the "Stock Library", which students were stumped by. This connects to the recurring theme of "datasets have a cognitive load penalty."
    
Jeffrey A. Stone and Elinor M. Madigan. 2008. The impact of providing project choices in CS1. SIGCSE Bull. 40, 2 (June 2008), 65-68. DOI=10.1145/1383602.1383637 http://doi.acm.org/10.1145/1383602.1383637
    Really great study on the role of agency in project assignment. Very small study, though - they had problems with low course enrollment and low survey response. THey also state that they had to limit the number of choices available to students. They also talk about the difficulty in form projects of equal difficulty - my stuff can start attempting to create some level of normalization of "Programming Expertise", as opposed to "Domain Level expertise".
    Their big takeaway is that gender has a big impact - however, the small sample size and the fact that they didn't analyze major makes me suspicious. It's likely that gender has an influence on their disicpline, and that has a bigger impact.
    
Janet Carter, Dennis Bouvier, Rachel Cardell-Oliver, Margaret Hamilton, Stanislav Kurkovsky, Stefanie Markham, O. William McClung, Roger McDermott, Charles Riedesel, Jian Shi, and Su White. 2011. Motivating all our students?. In Proceedings of the 16th annual conference reports on Innovation and technology in computer science education - working group reports (ITiCSE-WGR '11), Liz Adams and Justin Joseph Jurgens (Eds.). ACM, New York, NY, USA, 1-18. DOI=10.1145/2078856.2078858 http://doi.acm.org/10.1145/2078856.2078858
    Talks very strongly about the critical importance of Context. Also cites a guzidal paper on the importance of context ("Teaching computing to everyone" - So media comp). Of course, they also say that game design is a perfectly adequate context.
    
Jennifer S. Kay. 2011. Contextualized approaches to introductory computer science: the key to making computer science relevant or simply bait and switch?. In Proceedings of the 42nd ACM technical symposium on Computer science education (SIGCSE '11). ACM, New York, NY, USA, 177-182. DOI=10.1145/1953163.1953219 http://doi.acm.org/10.1145/1953163.1953219
    Acutally has some reference to the development of Situational Interest into Individual Interest (Renninger)! They talk about the dangers of when students graduate the "fun" CS course and move onto the usual stuff. Solutions:
        1) Extend the context throughout the curriculum - sounds boring, limited, and profs will not go for it
        2) They don't really offer other solutions.
    They mention that it might be less important for the student to be excited and more important that the instructor be excited - this can have a bigger impact by the transmitted excitement. My takeaway - part of the value of a dataset is how well the instructor believes in it and likes it, and imparts that excitement (Caring!).
    
Matthew Mitchell, Judy Sheard, and Selby Markham. 2000. Student motivation and positive impressions of computing subjects. In Proceedings of the Australasian conference on Computing education (ACSE '00), Ainslie E. Ellis (Ed.). ACM, New York, NY, USA, 189-194. DOI=10.1145/359369.359398 http://doi.acm.org/10.1145/359369.359398
    Results: students are motivated by Interset, Intellectual Challenges, and Usefulness to future career.
    Summative survey, so it might have been affected by their reviewing the entire field rather than doing it right after activities.
    
===============================

L. J. Barker, C. McDowell, and K. Kalahar. Exploring factors that influence computer science introductory course students to persist in the major. In Proceedings of the 40th ACM Technical Symposium on Computer Science Education, SIGCSE '09, pages 153–157, New York, NY, USA, 2009. ACM.
    113 students responded to a survey on why they would intend to major in CS. Although they end up finding that Meaningful Assignments is not one of the biggest factors, they do find that it's an important one.
    
---------------------------------

David G. Sullivan. 2013. A data-centric introduction to computer science for non-majors. In Proceeding of the 44th ACM technical symposium on Computer science education (SIGCSE '13). ACM, New York, NY, USA, 71-76. DOI=10.1145/2445196.2445222 http://doi.acm.org/10.1145/2445196.2445222
    This is a rundown of a Computational Thinking course using datasets. They teach with SQL and Python. Not as rigorous as I want my research to be, but definitely need to cite them. Evaluation was about motivation (didn't use MUSIC model, but did touch on usefulness)
 
Olaf A. Hall-Holt and Kevin R. Sanft. 2015. Statistics-infused Introduction to Computer Science. In Proceedings of the 46th ACM Technical Symposium on Computer Science Education (SIGCSE '15). ACM, New York, NY, USA, 138-143. DOI=10.1145/2676723.2677218 http://doi.acm.org/10.1145/2676723.2677218
    Stuck statistics into a CS0 course. They used both R and Python. Curiously, they were proud that they delayed iteration till near the end - using functional style instead. No evaluation.

Ruth E. Anderson, Michael D. Ernst, Robert Ordóñez, Paul Pham, and Steven A. Wolfman. 2014. Introductory programming meets the real world: using real problems and data in CS1. In Proceedings of the 45th ACM technical symposium on Computer science education (SIGCSE '14). ACM, New York, NY, USA, 465-466. DOI=10.1145/2538862.2538994 http://doi.acm.org/10.1145/2538862.2538994
    Anderson's paper on using datasets in CS Ed. It's only a special session though, so they don't have an evaluation or anything, more just a rundown on what they want to do.
    
Peter DePasquale. 2006. Exploiting on-line data sources as the basis of programming projects. SIGCSE Bull. 38, 1 (March 2006), 283-287. DOI=10.1145/1124706.1121430 http://doi.acm.org/10.1145/1124706.1121430
    Made a bunch of data sources available to students (all of them web-based). Only one response was included.
    
*****************************

Ali Erkan, Tom Pfaff, Jason Hamilton, and Michael Rogers. 2012. Sustainability themed problem solving in data structures and algorithms. In Proceedings of the 43rd ACM technical symposium on Computer Science Education (SIGCSE '12). ACM, New York, NY, USA, 9-14. DOI=10.1145/2157136.2157146 http://doi.acm.org/10.1145/2157136.2157146
    Sustainability-themed curriculum creation. They got about 16 survey responses that said the students liked it. 
    
Daniel E. Stevenson and Paul J. Wagner. 2006. Developing real-world programming assignments for CS1. SIGCSE Bull. 38, 3 (June 2006), 158-162. DOI=10.1145/1140123.1140167 http://doi.acm.org/10.1145/1140123.1140167
    They make a few example assignments. But they do raise interesting recommendations:
        make solution in advance, so you can iron out kinks and give proper guidance
        Toy data vs. Real-world data is a delicate balance- they recommend starting with smooth testing data and then moving onto the rough stuff.
        
Michael Goldweber, John Barr, Tony Clear, Renzo Davoli, Samuel Mann, Elizabeth Patitsas, and Scott Portnoff. 2012. A framework for enhancing the social good in computing education: a values approach. In Proceedings of the final reports on Innovation and technology in computer science education 2012 working groups (ITiCSE-WGR '12). ACM, New York, NY, USA, 16-38. DOI=10.1145/2426636.2426639 http://doi.acm.org/10.1145/2426636.2426639
    Relies on gender as a motivating factor.
    Makes arguments based on Usefulness over Interest - but they mention that externality isn't critical, since there are real world type problems in CS, like stenagagraphy.
    "Hence only those students who have survived one to two years of duck counting and Checkers will finally get exposed to the potential social value contributions of computing."
    Issues:
        Graphics and games are shinier - situational interest seems cheap and easy
        Extraneous Load - Cognitive load is added with a rich context
        Scoping issues - hard to add to the already packed curriculum
        Instructor's lack of domain knowledge
    Developed a specific rubric for developing problems:
        Student directed (Agency)
        Scaffolding (to promote success)
        External Domain Knowledge (how much they need to learn)
        Social Good Contribution (
        Coolness (The "sexiness", or what I'd call Interest)
        Explicit Reflection (how much they force students to dwell on the social aspects)
    Rest of the paper is case studies on how to do this.
        How does the inclusion of social good concepts affect student perceptions of computer science?
        Are students more motivated by these problems than traditional CS problems?
        Are non-traditional CS students attract to CS through these problems?
        Does this approach enhance the learning of CS concepts?

Cyndi Rader, Doug Hakkarinen, Barbara M. Moskal, and Keith Hellman. 2011. Exploring the appeal of socially relevant computing: are students interested in socially relevant problems?. In Proceedings of the 42nd ACM technical symposium on Computer science education (SIGCSE '11). ACM, New York, NY, USA, 423-428. DOI=10.1145/1953163.1953288 http://doi.acm.org/10.1145/1953163.1953288
        Suggests that "Fun" is better than "Real-World", but mitigates it by suggesting that they didn't make the problems the right level of difficulty (too hard, too unclear). They cite that its hard to make social problems the "right size" for students to do something meaningful.
        Men were much more likely to want to game, women responded favorably to the real-world.
        Project questions:
            Project was interesting 54 88 93
            Level of difficulty OK 53 100 93
            Instructions were OK 46 n/a n/a
            Student spent additional time
            because project was interesting 21 54 57
            Project shows real-world problem 85 96 93
            Student likes realistic projects 93 100 93
            Project shows CS application that
            can benefit society 76 92 93
            Student likes socially-beneficial
            projects 79 88 93
            Student generally likes to program 65 100 93 
            
Michael Buckley, John Nordlinger, and Devika Subramanian. 2008. Socially relevant computing. In Proceedings of the 39th SIGCSE technical symposium on Computer science education (SIGCSE '08). ACM, New York, NY, USA, 347-351. DOI=10.1145/1352135.1352255 http://doi.acm.org/10.1145/1352135.1352255
    Introduces two case study assignments for "Social Computing". They talk about "Social" (society at large) and "social" (personal interest).
   
    
    
Betsy DiSalvo and Amy Bruckman. 2011. From interests to values. Commun. ACM 54, 8 (August 2011), 27-29. DOI=10.1145/1978542.1978552 http://doi.acm.org/10.1145/1978542.1978552
    This research explores kids in urban settings and how we need to provide contexts of Value - moving beyond situational interest, essentially, and looking at it from a more holistic perspective. They have a really good bit about how this isn't "one sized fits all" - you have to react to your learners.
    
Lucas Layman, Laurie Williams, and Kelli Slaten. 2007. Note to self: make assignments meaningful. In Proceedings of the 38th SIGCSE technical symposium on Computer science education (SIGCSE '07). ACM, New York, NY, USA, 459-463. DOI=10.1145/1227310.1227466 http://doi.acm.org/10.1145/1227310.1227466
    Just recommends that instructors make socially relevent assignments.
    